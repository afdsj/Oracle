-- DDL(CREATE TABLE) 및 제약조건
-- DDL(DATA DEFINTION LANGUAGE) : 데이터 정의 언어
-- 객체(OBJECT)를 만들고(CREATE), 수정하고(ALTER), 삭제하는(DROP) 구문

-- 테이블 만들기
-- [표현식] : CREATE TABLE 테이블명(컬럼명 자료형(크기), 컬럼명 자료형(크기),...);

-- 테이블 생성구문                          
CREATE TABLE MEMBER(
    MEMBER_ID VARCHAR2(20),
    MEMBER_PWD VARCHAR2(20),
    MEMBER_NAME VARCHAR2(20)
);
-- 컬럼에 주석 달기
-- [표현식] : COMMENT ON COLUMN 테이블명 IS '주석내용';
COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원이름';

SELECT                  
        M.*
   FROM MEMBER M;
  
-- 해당 계정에 생성된 테이블 목록을 보여주는 구문으로 USER_TABLES에 정보가 담겨있음
SELECT                         
        UT.*
   FROM USER_TABLES UT;

SELECT
        UTC.*
   FROM USER_TAB_COLUMNS UTC
  WHERE UTC.TABLE_NAME = 'MEMBER';
  
DESC MEMBER;

-- 제약조건
-- 테이블 정의 시 각 컬럼에 대한 값을 넣을 수 있는 조건을 설정할 수 있다.
-- 데이터 무결성 보장을 목적으로 한다
-- PRIBARY KEY, NOT NULL, UNIQUE, CHECK, FOREIGN KEY
-- NOT NULL : 해당 컬럼에 NULL 값을 허용하지 않는 제약조건 컬럼레벨에서 제한

CREATE TABLE USER_NOCNS(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);
-- 데이터 추가
INSERT                           
    INTO USER_NOCNS(
    USER_NO, USER_ID, USER_PWD,
    USER_NAME, GENDER, PHONE, 
    EMAIL)
VALUES(
    1, 'USER01', 'PASS01',
    '홍길동', '남', '010-1234-5344',
    'GONG123@GMAIL.COM'
);

CREATE TABLE USER_NOTNULL(
    USER_NO NUMBER NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30) NOT NULL,
    UGENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT
    INTO USER_NOTNULL
(
    USER_NO, USER_ID, USER_PWD
    , USER_NAME, GENDER, PHONE
    , EMAIL
)VALUES(
    1,'USER01,PASS02;
    , NULL, NULL, 010-3232-2324'
    , 'HONG123@GMAIL.COM'
); -- NULL 값때문에 에러

SELECT
         UN.*
    FROM USER_NOTNULL UN;
    
SELECT
        UC.*
    FROM USER_CONSTRAINTS UC;
    
SELECT
        UCC.*
   FROM USER_CONS_COLUMNS UCC;
   
/* 
데이터 딕셔너리 조회
데이터 딕셔너리란?
데이터 사전이라고 불린다 (데이터에 의한 데이터-> 메타데이터)
DDL 구문을 이용해서 데이터의 구조를 정의, 수정, 삭제할 시 자동으로 반영되는 뷰(가상 테이블)
딕셔너리 뷰는 조회만 가능하다
1. USER_XXX
2. DAB_XXX
3. ALL_XXX
*/

SELECT
        UC.*
      , UCC.*
   FROM USER_CONSTRAINTS UC
   JOIN USER_CONS_COLUMNS UCC ON(UC.CONSTRAINT_NAME = UCC.CONSTRAINT_NAME)
  WHERE UC.TABLE_NAME = 'USER_NOTNULL';

-- UNIQUE 제약조건 : 컬럼 입력값에 대해 기존에 존재하는 값과 중복된 값이 들어갈 수 없도록 제한을 거는
--                 제약조건 컬럼레벨에서 설정 가능, 테이블 레벨에서 설정가능
-- UNIQUE : 
SELECT
       UN.*
  FROM USER_NOCNS UN;
  
INSERT
    INTO USER_NOCNS
    (
    USER_NO, USER_ID, USER_PWD,
    USER_NAME, GENDER, PHONE, EMAIL
    )VALUES(
    1, 'USER01', 'PASS01',
    '홍길동', '남', '010-2323-2424', 'HONE123@GMAIL.COM'
    );

CREATE TABLE USER_UNIQUE( --테이블 생성
    USER_NO NUMBER,
    USER_ID VARCHAR2(20) UNIQUE NOT NULL, 
    USER_PWD VARCHAR2(30) NOT NULL,
    USER_NAME VARCHAR2(30),
    GENDER VARCHAR2(10),
    PHONE VARCHAR2(30),
    EMAIL VARCHAR2(50)
);

INSERT 
    INTO USER_UNIQUE
(
    USER_NO, USER_ID, USER_PWD
  , USER_NAME, GENDER, PHONE, EMAIL
)VALUES
(
 1, 'USER01', 'PASS01'
,'홍길동', '남', '010-2323-2424'
,'HONE113@GMAL.COM'
);

INSERT 
    INTO USER_UNIQUE
(
    USER_NO, USER_ID, USER_PWD
  , USER_NAME, GENDER, PHONE, EMAIL
)VALUES
(
 2, NULL, 'PASS01'
,'김길동', '남', '010-2323-2424'
,'HONE113@GMAL.COM'
);

SELECT
 *
 FROM USER_UNIQUE;

SELECT
       UCC.TABLE_NAME
     , UCC.COLUMN_NAME
     , UC.CONSTRAINT_TYPE
  FROM USER_CONSTRAINTS UC
     , USER_CONS_COLUMNS UCC
 WHERE UC.CONSTRAINT_NAME = UCC.CONSTRAINT_NAME
   AND UCC.CONSTRAINT_NAME = 'SYS_C008368';
   
CREATE TABLE USER_UNIQUE2(
 USER_NO NUMBER,
 USER_ID VARCHAR2(20) NOT NULL,
 USER_PWD VARCHAR2(30) NOT NULL,
 USER_NAME VARCHAR2(30) NOT NULL,
 GENDER VARCHAR2(10),
 PHONE VARCHAR2(30),
 EMAIL VARCHAR2(50),
 UNIQUE(USER_ID)
);
 
CREATE TABLE USER_UNIQUE3(
 USER_NO NUMBER,
 USER_ID VARCHAR2(20) NOT NULL,
 USER_PWD VARCHAR2(30) NOT NULL,
 USER_NAME VARCHAR2(30) NOT NULL,
 GENDER VARCHAR2(10),
 PHONE VARCHAR2(30),
 EMAIL VARCHAR2(50),
 UNIQUE(USER_ID, USER_NO)
);

-- 제약조건에 이름 설정
CREATE TABLE CONS_NAME(
 TEST_DATA1 VARCHAR2(20) CONSTRAINT NN_TEST_DATA1 NOT NULL,
 TEST_DATA2 VARCHAR2(20) CONSTRAINT UN_TEST_DATA2 UNIQUE,
 TEST_DATA3 VARCHAR2(20),
 CONSTRAINT UN_TEST_DATA3 UNIQUE(TEST_DATA3)
);

-- CHECK 제약 조건 : 컬럼에 들어가는 값에 비교연산을 이용해 조건을 만조하는 경우에만 
--                  값이 들어갈 수 있도록 제한하는 제약조건
CREATE TABLE USER_CHECK(
 USER_NO NUMBER,
 USER_ID VARCHAR2(20) UNIQUE,
 USER_PWD VARCHAR2(30) NOT NULL,
 USER_NAME VARCHAR2(30),
 GENDER VARCHAR2(10) CHECK(GENDER IN('남', '여')),
 PHONE VARCHAR2(30),
 EMAIL VARCHAR2(50)
);

INSERT
    INTO USER_CHECK
    (
    USER_NO, USER_ID, USER_PWD,
    USER_NAME, GENDER, PHONE, EMAIL
    )VALUES(
    1, 'USER01', 'PASS01',
    '홍길동', '남', '010-2323-3434', 'HONE123@GMAIL.COM'
    );
    
INSERT
    INTO USER_CHECK
    (
    USER_NO, USER_ID, USER_PWD,
    USER_NAME, GENDER, PHONE, EMAIL
    )VALUES(
    1, 'USER01', 'PASS01',
    '홍길동', '남자', '010-2323-3434', 'HONE123@GMAIL.COM'
    );
